cor_with_obesity_lev <- cor_matrix["obesity_lev",]
# Order variables by their correlation with 'obesity_lev'
ordered_vars <- names(sort(cor_with_obesity_lev, decreasing = TRUE))
# Reorder the correlation matrix based on this order
cor_matrix_ordered <- cor_matrix[ordered_vars, ordered_vars]
# Melt the ordered correlation matrix into long format
cor_long <- melt(cor_matrix_ordered)
ggplot(cor_long, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
geom_text(aes(label = round(value, 2)), color = "black", size = 2.5, vjust = 0.5
, hjust = 0.5) + # Center text within tiles
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
labs(title = "Correlation Heatmap Ordered by Obesity Level", x = "Variables", y
= "Variables") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
# Rotate x-axis labels for readability
axis.text.y = element_text(angle = 45, vjust = 1)
# Rotate y-axis labels for readability
)
summary(dataset$age)
sd(dataset$age, na.rm = TRUE)
summary(dataset$age)
# sd(dataset$age, na.rm = TRUE)
summary(dataset$age)
sd(dataset$age, na.rm = TRUE)
sum_age <- summary(dataset$age)
kable(sum_age,format = "markdown", caption = "Summary of the age variable")
# sum_age <- summary(dataset$age)
# kable(sum_age,format = "markdown", caption = "Summary of the age variable")
sum_age_df <- tibble::tibble(
Metric = names(summary(dataset$age)),
Value = summary(dataset$age)
)
kable(sum_age_df, format = "markdown", caption = "Summary of the age variable")
sd(dataset$age, na.rm = TRUE)
# sum_age <- summary(dataset$age)
# kable(sum_age,format = "markdown", caption = "Summary of the age variable")
sum_age_df <- tibble::tibble(
Metric = names(summary(dataset$age)),
Value = summary(dataset$age),
SD = sd(dataset$age, na.rm = TRUE)
)
kable(sum_age_df, format = "markdown", caption = "Summary of the age variable")
# sd(dataset$age, na.rm = TRUE)
# sum_age <- summary(dataset$age)
# kable(sum_age,format = "markdown", caption = "Summary of the age variable")
sum_age_df <- tibble::tibble(
Metric = names(summary(dataset$age)),
Value = summary(dataset$age),
Standard_Dev = sd(dataset$age, na.rm = TRUE)
)
kable(sum_age_df, format = "markdown", caption = "Summary of the age variable")
# sd(dataset$age, na.rm = TRUE)
# sum_age <- summary(dataset$age)
# kable(sum_age,format = "markdown", caption = "Summary of the age variable")
sum_age_df <- tibble::tibble(
Metric = names(summary(dataset$age),sd(dataset$age, na.rm = TRUE)),
Value = summary(dataset$age)
)
# sum_age <- summary(dataset$age)
# kable(sum_age,format = "markdown", caption = "Summary of the age variable")
sum_age_df <- tibble::tibble(
Metric = names(summary(dataset$age)),
Value = summary(dataset$age)
)
kable(sum_age_df, format = "markdown", caption = "Summary of the age variable")
# sd(dataset$age, na.rm = TRUE)
# sum_age <- summary(dataset$age)
# kable(sum_age,format = "markdown", caption = "Summary of the age variable")
sum_age_df <- tibble::tibble(
Metric = c(names(summary(dataset$age)),,sd(dataset$age, na.rm = TRUE)),
Value = summary(dataset$age)
)
# sum_age <- summary(dataset$age)
# kable(sum_age,format = "markdown", caption = "Summary of the age variable")
sum_age_df <- tibble::tibble(
Metric = c(names(summary(dataset$age)),sd(dataset$age, na.rm = TRUE)),
Value = summary(dataset$age)
)
# sum_age <- summary(dataset$age)
# kable(sum_age,format = "markdown", caption = "Summary of the age variable")
sum_age_df <- tibble::tibble(
Metric = c(names(summary(dataset$age)), "Std. Dev"),
Value = c(summary(dataset$age), sd(dataset$age, na.rm = TRUE))
)
kable(sum_age_df, format = "markdown", caption = "Summary of the age variable")
# sd(dataset$age, na.rm = TRUE)
# sum_age <- summary(dataset$age)
# kable(sum_age,format = "markdown", caption = "Summary of the age variable")
sum_age_df <- tibble::tibble(
Metric = c(names(summary(dataset$age)), "Std. Dev"),
Value = c(summary(dataset$age), sd(dataset$age, na.rm = TRUE))
)
kable(sum_age_df, format = "markdown", caption = "Summary of the age variable")
# sd(dataset$age, na.rm = TRUE)
# this is what was written before in case you don't like the new output
#summary(dataset$age)
# sd(dataset$age, na.rm = TRUE)
sum_age_df <- tibble::tibble(
Metric = c(names(summary(dataset$age)), "Std. Dev"),
Value = c(summary(dataset$age), sd(dataset$age, na.rm = TRUE))
)
kable(sum_age_df, format = "markdown", caption = "Summary of the age variable")
# this is what was written before in case you don't like the new output
#summary(dataset$age)
# sd(dataset$age, na.rm = TRUE)
sum_age_df <- tibble::tibble(
Metric = c(names(summary(dataset$age)), "Std. Dev"),
Value = c(summary(dataset$age), sd(dataset$age, na.rm = TRUE))
)
kable(sum_age_df, format = "markdown", caption = "Summary of the age variable")
ggplot(dataset, aes(x = obesity_lev, y = age, fill = obesity_lev)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.1, color = "black", fill = "white") +
labs(title = "Age Distribution by Obesity Level", x = "Obesity Level", y = "Age") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dataset, aes(x = age, y = as.numeric(obesity_lev))) +
geom_jitter(alpha = 0.3) +
geom_smooth(method = "loess", se = FALSE, color = "blue") +
labs(title = "Trend of Obesity Level with Age", x = "Age", y = "Obesity Level") +
theme_minimal()
summary(dataset$height)
sd(dataset$height, na.rm = TRUE)
sum_height_df <- tibble::tibble(
Metric = c(names(summary(dataset$height)), "Std. Dev"),
Value = c(summary(dataset$height), sd(dataset$height, na.rm = TRUE))
)
kable(sum_height_df, format = "markdown", caption = "Summary of the height variable")
# summary(dataset$height)
# sd(dataset$height, na.rm = TRUE)
sum_height_df <- tibble::tibble(
Metric = c(names(summary(dataset$height)), "Std. Dev"),
Value = c(summary(dataset$height), sd(dataset$height, na.rm = TRUE))
)
kable(sum_height_df, format = "markdown", caption = "Summary of the height variable")
ggplot(dataset, aes(x = height)) +
geom_histogram(bins = 20, fill = "purple", color = "black", alpha = 0.7) +
labs(title = "Height Distribution", x = "Height (m)", y = "Count") +
theme_minimal()
ggplot(dataset, aes(x = obesity_lev, y = height, fill = obesity_lev)) +
geom_violin(alpha = 0.6) +
labs(title = "Height Distribution by Obesity Level", x = "Obesity Level", y = "Height") +
theme_minimal() +
theme(legend.position = "none", axis.text.x = element_text(angle = 45, hjust = 1))
# summary(dataset$weight)
# sd(dataset$weight, na.rm = TRUE)
sum_weight_df <- tibble::tibble(
Metric = c(names(summary(dataset$weight)), "Std. Dev"),
Value = c(summary(dataset$weight), sd(dataset$weight, na.rm = TRUE))
)
kable(sum_weight_df, format = "markdown", caption = "Summary of the weight variable")
# this is what was written before in case you don't like the new output
#summary(dataset$age)
# sd(dataset$age, na.rm = TRUE)
sum_age_df <- tibble::tibble(
Metric = c(names(summary(dataset$age)), "Std. Dev"),
Value = c(summary(dataset$age), sd(dataset$age, na.rm = TRUE))
)
kable(sum_age_df, format = "markdown", caption = "Summary of the age variable")
ggplot(dataset, aes(x = obesity_lev, y = age, fill = obesity_lev)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.1, color = "black", fill = "white") +
labs(title = "Age Distribution by Obesity Level", x = "Obesity Level", y = "Age") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dataset, aes(x = age, y = as.numeric(obesity_lev))) +
geom_jitter(alpha = 0.3) +
geom_smooth(method = "loess", se = FALSE, color = "blue") +
labs(title = "Trend of Obesity Level with Age", x = "Age", y = "Obesity Level") +
theme_minimal()
# summary(dataset$height)
# sd(dataset$height, na.rm = TRUE)
sum_height_df <- tibble::tibble(
Metric = c(names(summary(dataset$height)), "Std. Dev"),
Value = c(summary(dataset$height), sd(dataset$height, na.rm = TRUE))
)
kable(sum_height_df, format = "markdown", caption = "Summary of the height variable")
ggplot(dataset, aes(x = height)) +
geom_histogram(bins = 20, fill = "purple", color = "black", alpha = 0.7) +
labs(title = "Height Distribution", x = "Height (m)", y = "Count") +
theme_minimal()
ggplot(dataset, aes(x = obesity_lev, y = height, fill = obesity_lev)) +
geom_violin(alpha = 0.6) +
labs(title = "Height Distribution by Obesity Level", x = "Obesity Level", y = "Height") +
theme_minimal() +
theme(legend.position = "none", axis.text.x = element_text(angle = 45, hjust = 1))
# summary(dataset$weight)
# sd(dataset$weight, na.rm = TRUE)
sum_weight_df <- tibble::tibble(
Metric = c(names(summary(dataset$weight)), "Std. Dev"),
Value = c(summary(dataset$weight), sd(dataset$weight, na.rm = TRUE))
)
kable(sum_weight_df, format = "markdown", caption = "Summary of the weight variable")
ggplot(dataset, aes(x = weight, fill = gender)) +
geom_density(alpha = 0.5) +
labs(title = "Density Plot of Weight by Gender", x = "Weight", y = "Density") +
scale_fill_manual(values = c("pink", "lightblue"), name = "Gender", labels = c("Female", "Male")) +
theme_minimal()
ggplot(dataset, aes(x = weight, y = obesity_lev, fill = obesity_lev)) +
geom_density_ridges(scale = 0.9, alpha = 0.6) +
labs(title = "Ridgeline Plot of Weight by Obesity Level", x = "Weight", y = "Obesity Level") +
theme_minimal() +
theme(legend.position = "none")
ggplot(dataset, aes(x = height, y = weight, color = obesity_lev)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE, aes(group = obesity_lev)) +  # Adds a trend line for each obesity level
ggtitle("Scatter Plot of Weight vs Height by Obesity Level") +
theme_minimal() +
labs(x = "Height", y = "Weight", color = "Obesity Level")
ggplot(dataset, aes(x = height, y = weight)) +
geom_point(alpha = 0.7, aes(color = obesity_lev)) +
facet_wrap(~ obesity_lev) +
ggtitle("Facet Grid of Weight and Height by Obesity Level") +
theme_minimal() +
labs(x = "Height", y = "Weight", color = "Obesity Level") +
theme(legend.position = "none")
correlation_height_weight <- cor(dataset$height, dataset$weight, use = "complete.obs")
correlation_height_weight
# Dodged Bar Chart for food_btw_meals by obesity levels
ggplot(dataset, aes(x = food_btw_meals, fill = obesity_lev)) +
geom_bar(position = "dodge", color = "black") +
ggtitle("Dodged Bar Chart for Food Between Meals by Obesity Levels") +
labs(x = "Food Between Meals", y = "Count", fill = "Obesity Levels") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14))
# Stacked Bar Chart of Food Between Meals by Obesity Level (Proportions within each Obesity Level)
ggplot(dataset, aes(x = obesity_lev, fill = food_btw_meals)) +
geom_bar(position = "fill") + # Stacked bar chart with proportions
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) + # Format y-axis as percentages
ggtitle("Proportion of Food Between Meals Across Obesity Levels") + # Shortened and clear title
labs(x = "Obesity Levels", y = "Proportion (%)", fill = "Food Between Meals") + # Correct axis and legend labels
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1), # Rotate x-axis text for readability
plot.title = element_text(hjust = 0.5, size = 14) # Center and style the title
)
# Dodged Bar Chart for High-Caloric Food Consumption by Obesity Levels
ggplot(dataset, aes(x = caloric_food, fill = obesity_lev)) +
geom_bar(position = "dodge", color = "black") +
ggtitle("    Dodged Bar Chart for High-Caloric Food Consumption by Obesity Levels") +
labs(x = "High-Caloric Food Consumption", y = "Count", fill = "Obesity Levels") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14)) # Center and style the title
# Grouped Bar Chart of High-Caloric Food by Obesity Level (Proportions within each Obesity Level)
ggplot(dataset, aes(x = obesity_lev, fill = caloric_food)) +
geom_bar(position = "dodge", aes(y = (..count..) / tapply(..count.., ..x.., sum)[..x..]), color = "black") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
ggtitle("                                 Grouped Bar Chart of High-Caloric Food Consumption Across Obesity Levels") +
labs(x = "Obesity Levels", y = "Proportion (%)", fill = "High-Caloric Food Consumption") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 14)
)
percentage_high_caloric_consumers <- mean(dataset$caloric_food == "yes") * 100
percentage_high_caloric_consumers
# Filter out "Always" responses from the dataset
filtered_dataset <- dataset %>%
filter(freq_alcohol != "Always")
# Dodged Bar Chart for freq_alcohol by Obesity Levels (excluding "Always")
ggplot(filtered_dataset, aes(x = freq_alcohol, fill = obesity_lev)) +
geom_bar(position = "dodge", color = "black") +
ggtitle("Dodged Bar Chart for Alcohol Consumption by Obesity Levels") +
labs(x = "Alcohol Consumption Frequency", y = "Count", fill = "Obesity Levels") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14)) # Center and style the title
# Prepare the data summary for 'Sometimes' and 'No' responses
data_summary <- dataset %>%
filter(freq_alcohol %in% c("Sometimes", "No")) %>%
group_by(obesity_lev, freq_alcohol) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(obesity_lev) %>%
mutate(
total = sum(count),
proportion = count / total
) %>%
ungroup()
# Visualization with updated title
ggplot(data_summary, aes(x = obesity_lev, y = proportion, group = freq_alcohol, color = freq_alcohol)) +
geom_line(linewidth = 1.2) +
geom_point(size = 3) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +  # Format y-axis as percentages
ggtitle("Proportion of 'Sometimes' and 'No' Alcohol Responses by Obesity Level") +
labs(x = "Obesity Level", y = "Proportion (%)", color = "Alcohol Frequency") +
scale_color_manual(values = c("No" = "purple", "Sometimes" = "gold")) + # Improved color scheme
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 14),  # Center and style title
legend.position = "top"
)
# Dodged Bar Chart for calorie_check by Obesity Levels
ggplot(dataset, aes(x = calorie_check, fill = obesity_lev)) +
geom_bar(position = "dodge", color = "black") +
ggtitle("    Dodged Bar Chart for the check of the calories by Obesity Levels") +
labs(x = "High-Caloric Food Consumption", y = "Count", fill = "Obesity Levels") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14)) # Center and style the title
data_summary <- dataset %>%
group_by(obesity_lev, calorie_check) %>%
summarise(count = n(), .groups = "drop") %>%
mutate(total = sum(count), proportion = count / total)
ggplot(data_summary, aes(x = obesity_lev, y = proportion, group = calorie_check, color = calorie_check)) +
geom_line(size = 1.2) +
geom_point(size = 3) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("no" = "lightcoral", "yes" = "lightblue")) +
labs(title = "Proportion of Calorie Checking by Obesity Level", x = "Obesity Level", y = "Proportion", color = "Calorie Check") +
theme_minimal() +
theme(legend.position = "none", axis.text.x = element_text(angle = 45, hjust = 1))
# Dodged Bar Chart for calorie_check by Obesity Levels
ggplot(dataset, aes(x = calorie_check, fill = obesity_lev)) +
geom_bar(position = "dodge", color = "black") +
ggtitle("    Dodged Bar Chart for the check of the calories by Obesity Levels") +
labs(x = "High-Caloric Food Consumption", y = "Count", fill = "Obesity Levels") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14)) # Center and style the title
data_summary <- dataset %>%
group_by(obesity_lev, calorie_check) %>%
summarise(count = n(), .groups = "drop") %>%
mutate(total = sum(count), proportion = count / total)
ggplot(data_summary, aes(x = obesity_lev, y = proportion, group = calorie_check, color = calorie_check)) +
geom_line(linewidth = 1.2) +
geom_point(linewidth= 3) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("no" = "lightcoral", "yes" = "lightblue")) +
labs(title = "Proportion of Calorie Checking by Obesity Level", x = "Obesity Level", y = "Proportion", color = "Calorie Check") +
theme_minimal() +
theme(legend.position = "none", axis.text.x = element_text(angle = 45, hjust = 1))
# Dodged Bar Chart for calorie_check by Obesity Levels
ggplot(dataset, aes(x = calorie_check, fill = obesity_lev)) +
geom_bar(position = "dodge", color = "black") +
ggtitle("    Dodged Bar Chart for the check of the calories by Obesity Levels") +
labs(x = "High-Caloric Food Consumption", y = "Count", fill = "Obesity Levels") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14)) # Center and style the title
data_summary <- dataset %>%
group_by(obesity_lev, calorie_check) %>%
summarise(count = n(), .groups = "drop") %>%
mutate(total = sum(count), proportion = count / total)
ggplot(data_summary, aes(x = obesity_lev, y = proportion, group = calorie_check, color = calorie_check)) +
geom_line(linewidth = 1.2) +
geom_point(linewidth = 3) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("no" = "lightcoral", "yes" = "lightblue")) +
labs(title = "Proportion of Calorie Checking by Obesity Level", x = "Obesity Level", y = "Proportion", color = "Calorie Check") +
theme_minimal() +
theme(legend.position = "none", axis.text.x = element_text(angle = 45, hjust = 1))
# Dodged Bar Chart for calorie_check by Obesity Levels
ggplot(dataset, aes(x = calorie_check, fill = obesity_lev)) +
geom_bar(position = "dodge", color = "black") +
ggtitle("    Dodged Bar Chart for the check of the calories by Obesity Levels") +
labs(x = "High-Caloric Food Consumption", y = "Count", fill = "Obesity Levels") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14)) # Center and style the title
data_summary <- dataset %>%
group_by(obesity_lev, calorie_check) %>%
summarise(count = n(), .groups = "drop") %>%
mutate(total = sum(count), proportion = count / total)
ggplot(data_summary, aes(x = obesity_lev, y = proportion, group = calorie_check, color = calorie_check)) +
geom_line(linewidth = 1.2) +
geom_point(size = 3) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("no" = "lightcoral", "yes" = "lightblue")) +
labs(title = "Proportion of Calorie Checking by Obesity Level", x = "Obesity Level", y = "Proportion", color = "Calorie Check") +
theme_minimal() +
theme(legend.position = "none", axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dataset, aes(x = vegetable_food)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightgreen", color = "black", alpha = 0.6) +
geom_density(color = "darkgreen", size = 1) +
ggtitle("Histogram and Density of Vegetable Food Consumption") +
theme_minimal() +
labs(x = "Vegetable Food Consumption", y = "Density")
ggplot(dataset, aes(x = weight, y = vegetable_food, color = obesity_lev)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "loess", se = FALSE, color = "black") +
labs(title = "Scatterplot of Weight vs Vegetable Food Consumption",
x = "Weight",
y = "Vegetable Food Consumption") +
theme_minimal() +
coord_cartesian(xlim= c(40, 135), ylim= c(2, 3))
ggplot(dataset, aes(x = physical_act)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "skyblue", color = "black", alpha = 0.6) +
geom_density(color = "darkblue", size = 1) +
ggtitle("Histogram and Density of Physical Activity") +
theme_minimal() +
labs(x = "Physical Activity", y = "Density")
ggplot(dataset, aes(x = obesity_lev, y = physical_act, fill = obesity_lev)) +  # Replace 'obesity_lev' with any category variable
geom_violin(trim = FALSE) +
geom_boxplot(width = 0.1, color = "black", fill = "white") +
ggtitle("Violin Plot of Physical Activity by Obesity Level") +
theme_minimal() +
labs(x = "Obesity Level", y = "Physical Activity") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dataset, aes(x = ch2o)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "skyblue", color = "black", alpha = 0.6) +
geom_density(color = "darkblue", size = 1) +
ggtitle("Histogram and Density of Comsumption of Water") +
theme_minimal() +
labs(x = "CH2O", y = "Density")
# Scatterplot with a LOESS trend line
ggplot(dataset, aes(x = weight, y = ch2o, color = obesity_lev)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "loess", se = FALSE, color = "black") +
labs(title = "Scatterplot of Weight vs Water Consumption", x = "Weight", y = "Water Consumption (ch2o)") +
theme_minimal() +
coord_cartesian(xlim= c(35, 135))
ggplot(dataset, aes(x = use_tech)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue", color = "black", alpha = 0.6) +
geom_density(color = "blue", size = 1) +
labs(title = "Histogram and Density of Use of Technology", x = "Use of Technology", y = "Density") +
theme_minimal()
ggplot(dataset, aes(x = use_tech, fill = obesity_lev)) +
geom_density(alpha = 0.5) +
labs(title = "Density of Use of Technology by Obesity Level", x = "Use of Technology", y = "Density") +
theme_minimal()
ggplot(dataset, aes(x = obesity_lev, fill = caloric_food)) +
geom_bar(
position = "dodge",
aes(y = after_stat(count) / tapply(after_stat(count), after_stat(x), sum)[after_stat(x)]),
color = "black"
) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
ggtitle("                                 Grouped Bar Chart of High-Caloric Food Consumption Across Obesity Levels") +
labs(x = "Obesity Levels", y = "Proportion (%)", fill = "High-Caloric Food Consumption") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 14)
)
# Grouped Bar Chart of High-Caloric Food by Obesity Level (Proportions within each Obesity Level)
ggplot(dataset, aes(x = obesity_lev, fill = caloric_food)) +
geom_bar(
position = "dodge",
aes(y = after_stat(count) / tapply(after_stat(count), after_stat(x), sum)[after_stat(x)]),
color = "black") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
ggtitle("                                 Grouped Bar Chart of High-Caloric Food Consumption Across Obesity Levels") +
labs(x = "Obesity Levels", y = "Proportion (%)", fill = "High-Caloric Food Consumption") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 14)
)
# Grouped Bar Chart of High-Caloric Food by Obesity Level (Proportions within each Obesity Level)
ggplot(dataset, aes(x = obesity_lev, fill = caloric_food)) +
geom_bar(
position = "dodge",
aes(y = after_stat(count) / tapply(after_stat(count), after_stat(x), sum)[after_stat(x)]),
color = "black") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
ggtitle("                                 Grouped Bar Chart of High-Caloric Food Consumption Across Obesity Levels") +
labs(x = "Obesity Levels", y = "Proportion (%)", fill = "High-Caloric Food Consumption") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 14)
)
ggplot(dataset, aes(x = vegetable_food)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightgreen", color = "black", alpha = 0.6) +
geom_density(color = "darkgreen", linewidth = 1) +
ggtitle("Histogram and Density of Vegetable Food Consumption") +
theme_minimal() +
labs(x = "Vegetable Food Consumption", y = "Density")
ggplot(dataset, aes(x = vegetable_food)) +
geom_histogram(aes(y =after_stat(density)), bins = 30, fill = "lightgreen", color = "black", alpha = 0.6) +
geom_density(color = "darkgreen", linewidth = 1) +
ggtitle("Histogram and Density of Vegetable Food Consumption") +
theme_minimal() +
labs(x = "Vegetable Food Consumption", y = "Density")
desc_table <- tibble::tibble(
Name = c(colnames(dataset_raw)),
Type = c(colnames(dataset_raw),sapply(dataset_raw, class)),
)
desc_table <- tibble::tibble(
Name = colnames(dataset_raw),               # Column names
Type = sapply(dataset_raw, class)           # Corresponding data types
)
kable(desc_table, format = "markdown", caption = "Variable Descriptions")
desc_table <- tibble::tibble(
Name = colnames(dataset_raw),               # Column names
Type = sapply(dataset_raw, class)           # Corresponding data types
)
kable(desc_table, format = "markdown", caption = "Variable Descriptions",align = "lccrr")
val_meaning <- c("indicates the gender of the individual (Male/Female).","represents the age of participants in years.","the height of individuals in meters.","the weight of participants in kilograms.","indicates whether a family member has suffered from overweight (Yes/No).","indicates if participants frequently consume high-caloric foods (Yes/No).","scaled from 1 to 3, reflects how often vegetables are consumed (1 = Never, 3 = Always).","indicates the typical number of main meals consumed daily.","describes how often participants eat between meals (e.g., No, Sometimes, Frequently, Always).","indicates whether participants smoke (Yes/No).","scaled from 1 to 3, reflecting daily water intake (1 = Less than 1 liter, 3 = More than 2 liters).","whether participants monitor their calorie intake (Yes/No).","scaled from 0 to 4, indicating days of physical activity per week (0 = None, 4 = 4-5 days).","reflects daily time spent on technological devices, in hours.","indicates the frequency of alcohol consumption (e.g., I don't drink, Sometimes, Frequently, Always).","describes the primary mode of transportation (e.g., Walking, Public Transportation, Automobile).","the target variable, classifying obesity levels into categories such as Normal Weight, Overweight (Levels I and II), and Obesity (Types I, II, III).")
desc_table <- tibble::tibble(
Name = colnames(dataset_raw),               # Column names
Type = sapply(dataset_raw, class),
Meaning =  val_meaning# Corresponding data types
)
kable(desc_table, format = "markdown", caption = "Variable Descriptions",align = "lccrr")
library(here)
library(knitr)
dataset_raw <- read.csv(here("data/raw/dataset_raw.csv"))
kable(head(dataset_raw), format = "markdown", caption = "First 6 Rows of dataset_raw")
val_meaning <- c("indicates the gender of the individual (Male/Female).","represents the age of participants in years.","the height of individuals in meters.","the weight of participants in kilograms.","indicates whether a family member has suffered from overweight (Yes/No).","indicates if participants frequently consume high-caloric foods (Yes/No).","scaled from 1 to 3, reflects how often vegetables are consumed (1 = Never, 3 = Always).","indicates the typical number of main meals consumed daily.","describes how often participants eat between meals (e.g., No, Sometimes, Frequently, Always).","indicates whether participants smoke (Yes/No).","scaled from 1 to 3, reflecting daily water intake (1 = Less than 1 liter, 3 = More than 2 liters).","whether participants monitor their calorie intake (Yes/No).","scaled from 0 to 4, indicating days of physical activity per week (0 = None, 4 = 4-5 days).","reflects daily time spent on technological devices, in hours.","indicates the frequency of alcohol consumption (e.g., I don't drink, Sometimes, Frequently, Always).","describes the primary mode of transportation (e.g., Walking, Public Transportation, Automobile).","the target variable, classifying obesity levels into categories such as Normal Weight, Overweight (Levels I and II), and Obesity (Types I, II, III).")
desc_table <- tibble::tibble(
Name = colnames(dataset_raw),               # Column names
Type = sapply(dataset_raw, class),
Meaning =  val_meaning# Corresponding data types
)
kable(desc_table, format = "markdown", caption = "Variable Descriptions",align = "lccrr")
