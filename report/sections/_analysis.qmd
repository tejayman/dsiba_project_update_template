# Analysis

The analysis phase is dedicated to the development, refinement, and comprehensive evaluation of the predictive models, meticulously designed to directly address the previously defined research questions.

## Methods

The modeling process is structured to address the two key research questions:

1.  identifying the most significant lifestyle and behavioral factors contributing to obesity in Mexico, Peru, and Colombia;

2.  predicting whether a person will be obese based on some given combinations of factors.

### Logistic Regression Model

To accurately address the key research questions, a logistic regression model will be employed to estimate the probability of individuals belonging to a category: *obese* or *not obese*. Weight and height will be excluded as predictors in the model because they are directly used to calculate BMI, which serves as the basis for the obesity levels categorized in the dataset. Including these variables would create a dependency between the predictors and the target variable, potentially biasing the analysis. By excluding weight and height, the focus shifts to behavioral and lifestyle factors, such as dietary habits, physical activity, and demographic characteristics, to better understand their influence on obesity risk.

While logistic regression provides a clear and interpretable framework for estimating probabilities, it inherently limits the analysis to a binary classification. This restriction prevents the exploration of the full spectrum of obesity levels, such as Obesity Type I, II, or III, as classified in the dataset. Despite this limitation, logistic regression is a robust method for quantifying the relationships between independent variables and the binary outcome. Feature selection techniques will ensure that only the most relevant predictors are retained, and the model's performance will be rigorously evaluated using metrics such as accuracy, precision, recall, F1-score, and ROC-AUC, ensuring reliable and actionable insights.

### Insights and Limitations

Regression analysis helps us understand how predictors influence outcomes, with logistic regression classifying individuals as obese or not obese. As already discussed in the previous sections, the dataset offers a mix of advantages and challenges: synthetic data ensures balanced representation but lacks the complexity of real-world patterns, while user-collected data adds variability but is prone to biases. Logistic regression simplifies the analysis by focusing on binary outcomes, leaving out the nuanced gradations of obesity, and assumes linearity, which may not fully capture complex relationships. Despite these limitations, the model offers insights into obesity risk, serving as a valuable exercise and foundation for future data explorations, even if not directly applicable to real-world scenarios.

## Objectives of the Selected Method

### Logistic Regression Model Development

**Data Loading and Processing**

To align with the requirements of a logistic regression model, it was necessary to modify the dataset's target variable. The original variable, obesity level, was a multi-class categorical variable representing varying degrees of obesity and non-obesity. Since logistic regression is designed for binary classification, the target variable was converted into a binary format. Individuals with a BMI ≥ 30 were classified as obese (1), while others were classified as non-obese (0). This transformation ensured compatibility with the logistic regression framework. Following this adjustment, the target variable was converted into a factor, and the dataset was reviewed for consistency and readiness for analysis.

```{r}
dataset <- read.csv(here("data/processed/dataset.csv"))
dataset$BMI <- dataset$weight / (dataset$height^2)
head(dataset$BMI) %>%
  tibble::enframe(name = "Row", value = "BMI") %>%
  kable(format = "html", caption = "First 6 BMI Values") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE) %>%
  row_spec(0, bold = TRUE, background = "#f5f5f5")
summary_BMI <- summary(dataset$BMI)
summary_BMI %>%
  tibble::enframe(name = "Statistic", value = "Value") %>%
  kable(format = "html", caption = "Summary Statistics for BMI") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE) %>%
  row_spec(0, bold = TRUE, background = "#f5f5f5")
dataset$Obesity <- ifelse(dataset$BMI >= 30, 1, 0)
dataset$Obesity <- as.factor(dataset$Obesity)
table(dataset$Obesity) %>%
  as.data.frame() %>%
  kable(format = "html", caption = "Frequency: obesity categories") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE) %>%
  row_spec(0, bold = TRUE, background = "#f5f5f5")
head(dataset) %>%
  kable(format = "html", caption = "First 6 Rows of Updated Dataset") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = TRUE) %>%
  row_spec(0, bold = TRUE, background = "#f5f5f5") %>%
  scroll_box(width = "100%", height = "400px")
```

Twelve predictors associated with obesity-related behaviors, dietary habits, physical activity, and lifestyle factors were selected for analysis. These variables, along with the binary target variable Obesity (1 = obese, 0 = not obese), formed the dataset for logistic regression modeling. The dataset was reviewed to ensure correct structure and readiness for analysis.

```{r}
predictors <- c("family_hist", "caloric_food", "vegetable_food", "nb_meal_day", "food_btw_meals", "smoke", "ch2o", "calorie_check", "physical_act", "use_tech", "freq_alcohol", "m_trans")
model_data <- dataset[, c("Obesity", predictors)]

str_output <- capture.output(str(model_data))
str_table <- data.frame(Structure = str_output, stringsAsFactors = FALSE)

str_table %>%
  kable(format = "html", caption = "Structure of Model Data") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = TRUE) %>%
  row_spec(0, bold = TRUE, background = "#f5f5f5") %>%
  scroll_box(width = "100%", height = "400px")

head(model_data) %>%
  kable(format = "html", caption = "First 6 Rows of Model Data") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = TRUE) %>%
  row_spec(0, bold = TRUE, background = "#f5f5f5") %>%
  scroll_box(width = "100%", height = "400px")
```

**Model Development**

Three regression models were employed to ensure a systematic and robust approach to predictor selection and model development. The null model, containing only the intercept, served as a baseline to represent predictions without the influence of any predictors. This provided a reference point to evaluate how much additional explanatory power was gained by including predictors.

The full model, incorporating all predictors, represented the maximum complexity allowable within the dataset. This model helped understand the potential contribution of each variable but carried the risk of overfitting due to its complexity.

The stepwise model, guided by the Akaike Information Criterion (AIC), balanced the simplicity and performance of the model. By iteratively evaluating the inclusion or exclusion of predictors, the stepwise procedure identified the subset of variables that significantly contributed to explaining the outcome while minimizing unnecessary complexity. This process ensured that the final model retained only the most relevant predictors, achieving optimal fit and generalizability. Using these three models allowed for a thorough comparison and the development of a parsimonious and effective predictive model.

```{r}
full_model <- glm(Obesity ~ ., data = model_data, family = binomial)
null_model <- glm(Obesity ~ 1, data = model_data, family = binomial)
stepwise_model <- step(null_model, scope = list(lower = null_model, upper = full_model), direction = "both", trace = FALSE)
```

Presented below is a comprehensive overview of the logistic regression models.

*Full Model*

```{r}
coef_table <- coef(summary(full_model)) %>%
  as.data.frame() %>%
  tibble::rownames_to_column("Predictor")

coef_table %>%
  kable(format = "html", caption = "Coefficients of the Full Logistic Regression Model") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = TRUE) %>%
  row_spec(0, bold = TRUE, background = "#f5f5f5") %>%
  scroll_box(width = "100%", height = "400px")
```

*Null Model*

```{r}
null_model_summary <- summary(null_model)

null_model_coef_table <- coef(null_model_summary) %>%
  as.data.frame() %>%
  tibble::rownames_to_column("Predictor")

null_model_coef_table %>%
  kable(format = "html", caption = "Coefficients of the Null Logistic Regression Model") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = TRUE) %>%
  row_spec(0, bold = TRUE, background = "#f5f5f5") %>%
  scroll_box(width = "100%", height = "400px")
```

*Stepwise Model*

```{r}
stepwise_summary <- summary(stepwise_model)

stepwise_coef_table <- coef(stepwise_summary) %>%
  as.data.frame() %>%
  tibble::rownames_to_column("Predictor")

stepwise_coef_table %>%
  kable(format = "html", caption = "Coefficients of the Stepwise Logistic Regression Model") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = TRUE) %>%
  row_spec(0, bold = TRUE, background = "#f5f5f5") %>%
  scroll_box(width = "100%", height = "400px")
```

**Evaluation**

To evaluate the stepwise-selected model, predicted probabilities of obesity were generated for all individuals. These probabilities were converted into binary classifications using a threshold of 0.5. A confusion matrix was constructed to assess the model's performance, providing key metrics such as accuracy, sensitivity, specificity, precision, and F1-score.

```{r}
# predicted_probs <- predict(stepwise_model, type = "response")
# predicted_classes <- ifelse(predicted_probs >= 0.5, 1, 0)
# conf_matrix <- confusionMatrix(as.factor(predicted_classes), model_data$Obesity)
# print(conf_matrix)

```

```{r}
library(caret)
library(pROC)
# Predict probabilities from the stepwise model
predicted_probs <- predict(stepwise_model, type = "response")

# Convert probabilities to binary classes (using a threshold of 0.5)
predicted_classes <- ifelse(predicted_probs >= 0.5, 1, 0)

# Create a confusion matrix (comparison of predicted vs. actual values)
conf_matrix <- confusionMatrix(as.factor(predicted_classes), model_data$Obesity)

conf_matrix_table <- as.data.frame(conf_matrix$table)
colnames(conf_matrix_table) <- c("Actual", "Predicted", "Count")
conf_matrix_table <- conf_matrix_table %>%
  group_by(Actual) %>%
  mutate(Percentage = round((Count / sum(Count)) * 100, 2)) %>%
  ungroup()

conf_matrix_table %>%
  kable(format = "html", caption = "Confusion Matrix: Predicted vs Actual Values with Percentages") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = TRUE) %>%
  row_spec(0, bold = TRUE, background = "#f5f5f5") %>%
  column_spec(1, bold = TRUE, width = "150px") %>%
  column_spec(2, width = "150px") %>%
  column_spec(3, width = "100px") %>%
  column_spec(4, width = "100px") %>%
  scroll_box(width = "100%", height = "400px")

performance_metrics_vertical <- as.data.frame(conf_matrix$overall) %>%
  tibble::rownames_to_column("Metric") %>%
  tidyr::pivot_longer(cols = -Metric, names_to = NULL, values_to = "Value")
performance_metrics_vertical %>%
  kable(format = "html", caption = "Confusion Matrix Overall Performance Metrics") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE) %>%
  column_spec(1, bold = TRUE) %>%
  row_spec(0, bold = TRUE, background = "#f5f5f5") %>%
  scroll_box(width = "100%", height = "400px")

class_metrics_vertical <- as.data.frame(conf_matrix$byClass) %>%
  tibble::rownames_to_column("Metric") %>%
  tidyr::pivot_longer(cols = -Metric, names_to = NULL, values_to = "Value")
class_metrics_vertical %>%
  kable(format = "html", caption = "Class-Level Performance Metrics") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE) %>%
  column_spec(1, bold = TRUE) %>%
  row_spec(0, bold = TRUE, background = "#f5f5f5") %>%
  scroll_box(width = "100%", height = "400px")
```

```{r, message=FALSE}
# Compute ROC curve using the actual class labels and predicted probabilities
roc_curve <- pROC::roc(model_data$Obesity, predicted_probs)
auc_value <- pROC::auc(roc_curve)
print(auc_value)
```

Additionally, the ROC curve and AUC were calculated to further evaluate the model’s discriminative ability. The ROC curve visualizes the trade-off between sensitivity and specificity, while the AUC quantifies the model's ability to distinguish between obese and non-obese individuals.

**Results Visualization**

To assess the distribution of predicted probabilities, a scatter plot was created with observations color-coded by their actual class. This visualization provides a clear overview of the model's predictions and potential misclassifications.

```{r}
plot(predicted_probs, col = ifelse(model_data$Obesity == 1, "blue", "red"), pch = 16, xlab = "n° Observation", ylab = "Predicted Probability", main = "Predicted Probabilities of Obesity", cex = 0.6)
legend("bottomright", legend = c("Obese", "Not Obese"), col = c("blue", "red"), pch = 16)
```

For additional clarity, the ROC curve was plotted to visually represent the model's performance.

```{r}
plot(roc_curve, col = "blue", main = "ROC Curve", lwd = 3, xlim = c(0, 1), ylim = c(0, 1.05), xlab = "False Positive Rate", ylab = "True Positive Rate", cex.main = 1.5, cex.lab = 1.2, cex.axis = 1.1)
legend("topright", legend = paste("AUC =", round(auc_value, 3)), lwd = 0, cex = 1.2, bty = "n")
grid()
```

**Predicting Obesity Probability**

To test the model’s ability to predict the probability of individuals becoming obese, six distinct profiles were created, representing a diverse range of lifestyles. Each profile was carefully designed to highlight specific behavioral, dietary, and lifestyle patterns.

The first individual represents a high-risk case for obesity. This person has a family history of being overweight, frequently consumes high-calorie foods and snacks, and eats very few vegetables. They have five meals a day, drink only 0.5 liters of water daily, and do no physical activity. Additionally, they spend 10 hours a day using technology, consume alcohol consistently, and rely primarily on public transportation for mobility.

The second individual exemplifies a very healthy lifestyle. They have no family history of being overweight, rarely consume high-calorie foods or snacks, and eat a large amount of vegetables. Their diet consists of very few meals per day, complemented by a high water intake of 4 liters daily. They do not monitor calorie intake but engage in physical activity five times a week. They walk as their primary mode of transportation, do not consume alcohol, and spend only 0.5 hours daily using technology.

The third individual exhibits a balanced lifestyle but shows some risk factors. This person has a family history of being overweight, frequently consumes snacks and high-calorie foods, and eats a moderate amount of vegetables. They have three meals a day, drink 1 liter of water, and monitor their calorie intake. However, they engage in physical activity only once a week, use technology for 8 hours daily, use motorbike as transportation vehicle, and occasionally consume alcohol.

The fourth individual is physically active and health-conscious. They have no family history of being overweight, do not frequently consume high-calorie foods, but snack occasionally. They eat a lot of vegetables, have a small number of meals per day, and drink 3 liters of water daily. They do not monitor calorie intake but exercise three times a week and use a bicycle for transportation. They consume alcohol frequently but spend only an hour daily using technology.

The fifth individual represents another high-risk case due to a sedentary lifestyle. They have a family history of being overweight, frequently consume high-calorie foods and snacks, and eat very few vegetables. They have four meals a day, drink 2 liters of water, and do no physical activity. They spend 6 hours daily using technology, consume alcohol moderately, and rely on public transportation.

The sixth individual leads a very active lifestyle but has some risk factors due to alcohol and transportation choices. They have no family history of being overweight, do not frequently consume high-calorie foods or snacks, and eat a large amount of vegetables. They have two meals per day, drink 1.5 liters of water, and do not monitor calorie intake. However, they engage in physical activity four times a week, use a motorbike for transportation, do not consume alcohol, and spend 2 hours daily using technology.

These six profiles were designed to test the model’s capacity to handle a wide variety of real-world scenarios, ensuring it can effectively predict obesity probabilities across diverse populations.

```{r}
new_data <- data.frame(
  family_hist = factor(c("yes", "no", "yes", "no", "yes", "no"), 
                                          levels = c("yes", "no")),
  caloric_food = factor(c("yes", "no", "yes", "no", "yes", "no"), 
                levels = c("yes", "no")),
  vegetable_food = c(1, 5, 2, 4, 1, 3),
  nb_meal_day = c(5, 1, 3, 2, 4, 2),
  food_btw_meals = factor(c("Frequently", "Sometimes", "Always", "Sometimes", "Frequently", "Always"), 
                levels = c("Frequently", "Sometimes", "Always")),
  smoke = factor(c("no", "yes", "no", "yes", "yes", "no"), 
                 levels = c("yes", "no")),
  ch2o = c(0.5, 4, 1, 3, 2, 1.5),
  calorie_check = factor(c("yes", "no", "yes", "no", "yes", "no"), 
               levels = c("yes", "no")),
  physical_act = c(0, 5, 1, 3, 0, 4),
  use_tech = c(10, 0.5, 8, 1, 6, 2),
  freq_alcohol = factor(c("Always", "Never", "Sometimes", "Always", "Sometimes", "Never"), 
                levels = c("Sometimes", "Frequently", "Always", "Never")),
  m_trans = factor(c("Public_Transportation", "Walking", "Motorbike", "Bike", "Public_Transportation", "Motorbike"), 
                  levels = c("Public_Transportation", "Walking", "Bike", "Motorbike"))
)

probability_table <- tibble(
  Reference = 1:length(predicted_probs),
  Predicted_Probability = predicted_probs,
  Probability_Percentage = predicted_probs * 100
)

probability_table %>%
  kbl(format = "html", caption = "Predicted Probabilities") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE) %>%
  column_spec(1, width = "100px") %>%
  scroll_box(width = "100%", height = "400px")
```

## Results
