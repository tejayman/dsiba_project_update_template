ggplot(dataset, aes(x = use_tech, fill = obesity_lev)) +
geom_density(alpha = 0.5) +
labs(title = "Density of Use of Technology by Obesity Level", x = "Use of Technology", y = "Density") +
theme_minimal()
dataset <- dataset_raw %>%
rename(
family_hist = family_history_with_overweight,
obesity_lev = NObeyesdad,
caloric_food = FAVC,
vegetable_food = FCVC,
nb_meal_day = NCP,
food_btw_meals = CAEC,
ch2o = CH2O,
smoke = SMOKE,
calorie_check = SCC,
physical_act = FAF,
freq_alcohol = CALC,
use_tech = TUE,
m_trans = MTRANS,
gender = Gender,
age = Age,
weight = Weight,
height = Height
)
library(here)
dataset_raw <- read.csv(here("data/raw/dataset_raw.csv"))
head(dataset_raw)
library(dplyr)
library(tidyr)
library(ggplot2)
library(corrplot)
library(ggridges)
library(cluster)
library(reshape2)
dataset <- dataset_raw %>%
rename(
family_hist = family_history_with_overweight,
obesity_lev = NObeyesdad,
caloric_food = FAVC,
vegetable_food = FCVC,
nb_meal_day = NCP,
food_btw_meals = CAEC,
ch2o = CH2O,
smoke = SMOKE,
calorie_check = SCC,
physical_act = FAF,
freq_alcohol = CALC,
use_tech = TUE,
m_trans = MTRANS,
gender = Gender,
age = Age,
weight = Weight,
height = Height
)
missing_values <- colSums(is.na(dataset))
missing_values
str(dataset)
dataset <- dataset %>%
mutate(
gender = as.factor(gender),
family_hist = as.factor(family_hist),
caloric_food = as.factor(caloric_food),
smoke = as.factor(smoke),
calorie_check = as.factor(calorie_check),
m_trans = as.factor(m_trans),
obesity_lev = factor(obesity_lev,
levels = c("Insufficient_Weight", "Normal_Weight",
"Overweight_Level_I", "Overweight_Level_II",
"Obesity_Type_I", "Obesity_Type_II", "Obesity_Type_III"),
ordered = TRUE),
food_btw_meals = factor(ifelse(food_btw_meals == "no", "No", food_btw_meals),
levels = c("No", "Sometimes", "Frequently", "Always"),
ordered = TRUE),
freq_alcohol = factor(ifelse(freq_alcohol == "no", "No", freq_alcohol),
levels = c("No", "Sometimes", "Frequently", "Always"),
ordered = TRUE))
str(dataset)
duplicated_rows <- sum(duplicated(dataset))
duplicated_rows
dataset <- dataset %>%
distinct()
nrow(dataset)
any(duplicated(dataset))
ggplot(dataset, aes(x = obesity_lev)) +
geom_bar(fill = "skyblue", color = "black") +
theme_minimal() +
labs(
title = "Class Distribution of Obesity Levels",
x = "Obesity Level",
y = "Count"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) #Adjusted the text for clarity
ggplot(dataset, aes(x = age, fill = obesity_lev)) +
geom_density(alpha = 0.5) +
theme_minimal() +
labs(
title = "Age Distribution by Obesity Levels",
x = "Age",
y = "Density",
fill = "Obesity Level") +
xlim(14, 50) # Limit the x-axis to 0â€“50
dataset %>%
group_by(obesity_lev) %>%
summarize(
Age_Mean = mean(age, na.rm = TRUE),
Age_SD = sd(age, na.rm = TRUE),
Height_Mean = mean(height, na.rm = TRUE),
Height_SD = sd(height, na.rm = TRUE),
Weight_Mean = mean(weight, na.rm = TRUE),
Weight_SD = sd(weight, na.rm = TRUE)
)
library(cluster)
set.seed(123)
kmeans_res <- kmeans(select(dataset, where(is.numeric)), centers = length(unique(dataset$obesity_lev)))
silhouette_score <- silhouette(kmeans_res$cluster, dist(select(dataset, where(is.numeric))))
mean_silhouette_score <- mean(silhouette_score[, "sil_width"])
mean_silhouette_score
dataset_num <- dataset %>%
mutate(obesity_lev = recode(obesity_lev,
"Insufficient_Weight"=1,
"Normal_Weight" = 2,
"Overweight_Level_I" = 3,
"Overweight_Level_II" = 4,
"Obesity_Type_I" = 5,
"Obesity_Type_II" = 6,
"Obesity_Type_III" = 7,
))
dataset_num <- dataset %>%
mutate(freq_alcohol = recode(freq_alcohol,
"No"=1,
"Sometimes"=2,
"Frequently" =3,
"Always"  =4
))
dataset_num <- dataset %>%
mutate(m_trans = recode(m_trans,
"Automobile"=1,
"Bike"=2,
"Motorbike"=3,
"Public_Transportation"=4,
"Walking"=5,
))
dataset_num <- dataset %>%
mutate(food_btw_meals = recode(food_btw_meals,
"No"=0,
"Sometimes"=1 ,
"Frequently"=2,
"Always"=3
)
)
dataset_num <- dataset_num%>%
mutate(calorie_check = recode(calorie_check,
"no"=0,
"yes"=1 ,
))
dataset_num <- dataset_num %>%
mutate(across(where(is.factor), ~ as.numeric(.)))
str(dataset_num)
head(dataset_num)
colSums(is.na(dataset_num))
#Assuming dataset_num is already defined and contains the relevant columns
cor_matrix <- cor(dataset_num %>%
select("physical_act", "freq_alcohol", "obesity_lev", "age",
"weight","height", "family_hist", "caloric_food",
"vegetable_food", "food_btw_meals", "use_tech", "ch2o",
"m_trans", "smoke","nb_meal_day", "calorie_check",
"gender"),
use = "complete.obs")
#Extract the correlations with 'obesity_lev'
cor_with_obesity_lev <- cor_matrix["obesity_lev",]
#Order variables by their correlation with 'obesity_lev'
ordered_vars <- names(sort(cor_with_obesity_lev, decreasing = TRUE))
#Reorder the correlation matrix based on this order
cor_matrix_ordered <- cor_matrix[ordered_vars, ordered_vars]
#Melt the ordered correlation matrix into long format
cor_long <- melt(cor_matrix_ordered)
ggplot(cor_long, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
geom_text(aes(label = round(value, 2)), color = "black", size = 2.5, vjust = 0.5
, hjust = 0.5) + # Center text within tiles
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
labs(title = "Correlation Heatmap Ordered by Obesity Level", x = "Variables", y
= "Variables") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
# Rotate x-axis labels for readability
axis.text.y = element_text(angle = 45, vjust = 1)
# Rotate y-axis labels for readability
)
# Create the heatmap with correlation values
# Assuming dataset_num is already defined and contains the relevant columns
cor_matrix <- cor(dataset_num %>%
select("physical_act", "freq_alcohol", "obesity_lev", "age",
"weight", "family_hist", "caloric_food",
"vegetable_food", "food_btw_meals",
"use_tech","ch2o", "height",
"calorie_check", "gender"),
use = "complete.obs")
# Extract the correlations with 'obesity_lev'
cor_with_obesity_lev <- cor_matrix["obesity_lev",]
# Order variables by their correlation with 'obesity_lev'
ordered_vars <- names(sort(cor_with_obesity_lev, decreasing = TRUE))
# Reorder the correlation matrix based on this order
cor_matrix_ordered <- cor_matrix[ordered_vars, ordered_vars]
# Melt the ordered correlation matrix into long format
cor_long <- melt(cor_matrix_ordered)
ggplot(cor_long, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
geom_text(aes(label = round(value, 2)), color = "black", size = 2.5, vjust = 0.5
, hjust = 0.5) + # Center text within tiles
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
labs(title = "Correlation Heatmap Ordered by Obesity Level", x = "Variables", y
= "Variables") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
# Rotate x-axis labels for readability
axis.text.y = element_text(angle = 45, vjust = 1)
# Rotate y-axis labels for readability
)
library(dplyr)
library(tidyr)
library(ggplot2)
library(corrplot)
library(ggridges)
library(cluster)
library(reshape2)
summary(dataset$age)
sd(dataset$age, na.rm = TRUE)
ggplot(dataset, aes(x = obesity_lev, y = age, fill = obesity_lev)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.1, color = "black", fill = "white") +
labs(title = "Age Distribution by Obesity Level", x = "Obesity Level", y = "Age") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dataset, aes(x = age, y = as.numeric(obesity_lev))) +
geom_jitter(alpha = 0.3) +
geom_smooth(method = "loess", se = FALSE, color = "blue") +
labs(title = "Trend of Obesity Level with Age", x = "Age", y = "Obesity Level") +
theme_minimal()
summary(dataset$height)
sd(dataset$height, na.rm = TRUE)
ggplot(dataset, aes(x = height)) +
geom_histogram(bins = 20, fill = "purple", color = "black", alpha = 0.7) +
labs(title = "Height Distribution", x = "Height (m)", y = "Count") +
theme_minimal()
ggplot(dataset, aes(x = obesity_lev, y = height, fill = obesity_lev)) +
geom_violin(alpha = 0.6) +
labs(title = "Height Distribution by Obesity Level", x = "Obesity Level", y = "Height") +
theme_minimal() +
theme(legend.position = "none", axis.text.x = element_text(angle = 45, hjust = 1))
summary(dataset$weight)
sd(dataset$weight, na.rm = TRUE)
ggplot(dataset, aes(x = weight, fill = gender)) +
geom_density(alpha = 0.5) +
labs(title = "Density Plot of Weight by Gender", x = "Weight", y = "Density") +
scale_fill_manual(values = c("pink", "lightblue"), name = "Gender", labels = c("Female", "Male")) +
theme_minimal()
ggplot(dataset, aes(x = weight, y = obesity_lev, fill = obesity_lev)) +
geom_density_ridges(scale = 0.9, alpha = 0.6) +
labs(title = "Ridgeline Plot of Weight by Obesity Level", x = "Weight", y = "Obesity Level") +
theme_minimal() +
theme(legend.position = "none")
ggplot(dataset, aes(x = height, y = weight, color = obesity_lev)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE, aes(group = obesity_lev)) +  # Adds a trend line for each obesity level
ggtitle("Scatter Plot of Weight vs Height by Obesity Level") +
theme_minimal() +
labs(x = "Height", y = "Weight", color = "Obesity Level")
ggplot(dataset, aes(x = height, y = weight)) +
geom_point(alpha = 0.7, aes(color = obesity_lev)) +
facet_wrap(~ obesity_lev) +
ggtitle("Facet Grid of Weight and Height by Obesity Level") +
theme_minimal() +
labs(x = "Height", y = "Weight", color = "Obesity Level") +
theme(legend.position = "none")
correlation_height_weight <- cor(dataset$height, dataset$weight, use = "complete.obs")
correlation_height_weight
# Dodged Bar Chart for food_btw_meals by obesity levels
ggplot(dataset, aes(x = food_btw_meals, fill = obesity_lev)) +
geom_bar(position = "dodge", color = "black") +
ggtitle("Dodged Bar Chart for Food Between Meals by Obesity Levels") +
labs(x = "Food Between Meals", y = "Count", fill = "Obesity Levels") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14))
# Stacked Bar Chart of Food Between Meals by Obesity Level (Proportions within each Obesity Level)
ggplot(dataset, aes(x = obesity_lev, fill = food_btw_meals)) +
geom_bar(position = "fill") + # Stacked bar chart with proportions
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) + # Format y-axis as percentages
ggtitle("Proportion of Food Between Meals Across Obesity Levels") + # Shortened and clear title
labs(x = "Obesity Levels", y = "Proportion (%)", fill = "Food Between Meals") + # Correct axis and legend labels
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1), # Rotate x-axis text for readability
plot.title = element_text(hjust = 0.5, size = 14) # Center and style the title
)
# Dodged Bar Chart for High-Caloric Food Consumption by Obesity Levels
ggplot(dataset, aes(x = caloric_food, fill = obesity_lev)) +
geom_bar(position = "dodge", color = "black") +
ggtitle("    Dodged Bar Chart for High-Caloric Food Consumption by Obesity Levels") +
labs(x = "High-Caloric Food Consumption", y = "Count", fill = "Obesity Levels") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14)) # Center and style the title
# Grouped Bar Chart of High-Caloric Food by Obesity Level (Proportions within each Obesity Level)
ggplot(dataset, aes(x = obesity_lev, fill = caloric_food)) +
geom_bar(position = "dodge", aes(y = (..count..) / tapply(..count.., ..x.., sum)[..x..]), color = "black") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
ggtitle("                                 Grouped Bar Chart of High-Caloric Food Consumption Across Obesity Levels") +
labs(x = "Obesity Levels", y = "Proportion (%)", fill = "High-Caloric Food Consumption") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 14)
)
percentage_high_caloric_consumers <- mean(dataset$caloric_food == "yes") * 100
percentage_high_caloric_consumers
# Filter out "Always" responses from the dataset
filtered_dataset <- dataset %>%
filter(freq_alcohol != "Always")
# Dodged Bar Chart for freq_alcohol by Obesity Levels (excluding "Always")
ggplot(filtered_dataset, aes(x = freq_alcohol, fill = obesity_lev)) +
geom_bar(position = "dodge", color = "black") +
ggtitle("Dodged Bar Chart for Alcohol Consumption by Obesity Levels") +
labs(x = "Alcohol Consumption Frequency", y = "Count", fill = "Obesity Levels") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14)) # Center and style the title
# Prepare the data summary for 'Sometimes' and 'No' responses
data_summary <- dataset %>%
filter(freq_alcohol %in% c("Sometimes", "No")) %>%
group_by(obesity_lev, freq_alcohol) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(obesity_lev) %>%
mutate(
total = sum(count),
proportion = count / total
) %>%
ungroup()
# Visualization with updated title
ggplot(data_summary, aes(x = obesity_lev, y = proportion, group = freq_alcohol, color = freq_alcohol)) +
geom_line(linewidth = 1.2) +
geom_point(size = 3) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +  # Format y-axis as percentages
ggtitle("Proportion of 'Sometimes' and 'No' Alcohol Responses by Obesity Level") +
labs(x = "Obesity Level", y = "Proportion (%)", color = "Alcohol Frequency") +
scale_color_manual(values = c("No" = "purple", "Sometimes" = "gold")) + # Improved color scheme
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 14),  # Center and style title
legend.position = "top"
)
# Dodged Bar Chart for calorie_check by Obesity Levels
ggplot(dataset, aes(x = calorie_check, fill = obesity_lev)) +
geom_bar(position = "dodge", color = "black") +
ggtitle("    Dodged Bar Chart for the check of the calories by Obesity Levels") +
labs(x = "High-Caloric Food Consumption", y = "Count", fill = "Obesity Levels") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14)) # Center and style the title
data_summary <- dataset %>%
group_by(obesity_lev, calorie_check) %>%
summarise(count = n(), .groups = "drop") %>%
mutate(total = sum(count), proportion = count / total)
ggplot(data_summary, aes(x = obesity_lev, y = proportion, group = calorie_check, color = calorie_check)) +
geom_line(size = 1.2) +
geom_point(size = 3) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("no" = "lightcoral", "yes" = "lightblue")) +
labs(title = "Proportion of Calorie Checking by Obesity Level", x = "Obesity Level", y = "Proportion", color = "Calorie Check") +
theme_minimal() +
theme(legend.position = "none", axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dataset, aes(x = vegetable_food)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightgreen", color = "black", alpha = 0.6) +
geom_density(color = "darkgreen", size = 1) +
ggtitle("Histogram and Density of Vegetable Food Consumption") +
theme_minimal() +
labs(x = "Vegetable Food Consumption", y = "Density")
ggplot(dataset, aes(x = weight, y = vegetable_food, color = obesity_lev)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "loess", se = FALSE, color = "black") +
labs(title = "Scatterplot of Weight vs Vegetable Food Consumption",
x = "Weight",
y = "Vegetable Food Consumption") +
theme_minimal() +
coord_cartesian(xlim= c(40, 135), ylim= c(2, 3))
ggplot(dataset, aes(x = physical_act)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "skyblue", color = "black", alpha = 0.6) +
geom_density(color = "darkblue", size = 1) +
ggtitle("Histogram and Density of Physical Activity") +
theme_minimal() +
labs(x = "Physical Activity", y = "Density")
ggplot(dataset, aes(x = obesity_lev, y = physical_act, fill = obesity_lev)) +  # Replace 'obesity_lev' with any category variable
geom_violin(trim = FALSE) +
geom_boxplot(width = 0.1, color = "black", fill = "white") +
ggtitle("Violin Plot of Physical Activity by Obesity Level") +
theme_minimal() +
labs(x = "Obesity Level", y = "Physical Activity") +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(dataset, aes(x = ch2o)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "skyblue", color = "black", alpha = 0.6) +
geom_density(color = "darkblue", size = 1) +
ggtitle("Histogram and Density of Comsumption of Water") +
theme_minimal() +
labs(x = "CH2O", y = "Density")
# Scatterplot with a LOESS trend line
ggplot(dataset, aes(x = weight, y = ch2o, color = obesity_lev)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "loess", se = FALSE, color = "black") +
labs(title = "Scatterplot of Weight vs Water Consumption", x = "Weight", y = "Water Consumption (ch2o)") +
theme_minimal() +
coord_cartesian(xlim= c(35, 135))
ggplot(dataset, aes(x = use_tech)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue", color = "black", alpha = 0.6) +
geom_density(color = "blue", size = 1) +
labs(title = "Histogram and Density of Use of Technology", x = "Use of Technology", y = "Density") +
theme_minimal()
ggplot(dataset, aes(x = use_tech, fill = obesity_lev)) +
geom_density(alpha = 0.5) +
labs(title = "Density of Use of Technology by Obesity Level", x = "Use of Technology", y = "Density") +
theme_minimal()
ggplot(dataset %>% filter(obesity_lev == "Obesity_Type_III"), aes(x = use_tech, y = weight)) +
geom_point(alpha = 0.6, color = "gold") +
geom_smooth(method = "loess", se = FALSE, color = "darkred", size = 1) +
labs(title = "Scatterplot of Weight vs. Use of Technology for Obesity Type III",
x = "Use of Technology", y = "Weight") +
theme_minimal()
