geom_text(aes(label = round(value, 2)), color = "black", size = 2.5, vjust = 0.5
, hjust = 0.5) + # Center text within tiles
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
labs(title = "Correlation Heatmap Ordered by Obesity Level", x = "Variables", y
= "Variables") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_text(angle = 45, vjust = 1)
)
plot4 <- ggplotly(g4)
plot4
age_summary <- summary(dataset$age)
age_sd <- sd(dataset$age, na.rm = TRUE)
sum_age_df <- tibble::tibble(
Metric = c(names(age_summary), "Standard Deviation"),
Value = round(c(age_summary, age_sd), 2)
)
kable(sum_age_df, format = "markdown", caption = "Age Variable Statistics")
g5 <- ggplot(dataset, aes(x = obesity_lev, y = age, fill = obesity_lev)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.1, color = "black", fill = "white") +
labs(title = "Age Distribution by Obesity Level", x = "Obesity Level", y = "Age") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot5 <- ggplotly(g5)
plot5
g6 <- ggplot(dataset, aes(x = age, y = as.numeric(obesity_lev))) +
geom_jitter(alpha = 0.3) +
geom_smooth(method = "loess", se = FALSE, color = "blue") +
labs(title = "Trend of Obesity Level with Age", x = "Age", y = "Obesity Level") +
theme_minimal()
plot6 <- ggplotly(g6)
plot6
height_summary <- summary(dataset$height)
height_sd <- sd(dataset$height, na.rm = TRUE)
sum_height_df <- tibble::tibble(
Metric = c(names(height_summary), "Standard Deviation"),
Value = round(c(height_summary, height_sd), 2)
)
kable(sum_height_df, format = "markdown", caption = "Height Variable Statistics")
g7 <- ggplot(dataset, aes(x = height)) +
geom_histogram(bins = 20, fill = "purple", color = "black", alpha = 0.7) +
labs(title = "Height Distribution", x = "Height (m)", y = "Count") +
theme_minimal()
plot7 <- ggplotly(g7)
plot7
g8 <- ggplot(dataset, aes(x = obesity_lev, y = height, fill = obesity_lev)) +
geom_violin(alpha = 0.6) +
labs(title = "Height Distribution by Obesity Level", x = "Obesity Level", y = "Height") +
theme_minimal() +
theme(legend.position = "none", axis.text.x = element_text(angle = 45, hjust = 1))
plot8 <- ggplotly(g8)
plot8
sum_weight_df <- tibble::tibble(
Metric = c(names(summary(dataset$weight)), "Std. Dev"),
Value = round(c(summary(dataset$weight), sd(dataset$weight, na.rm = TRUE)), 2)
)
kable(sum_weight_df, format = "markdown", caption = "Weight Variable Statistics")
g9 <- ggplot(dataset, aes(x = weight, fill = gender)) +
geom_density(alpha = 0.5) +
labs(title = "Density Plot of Weight by Gender", x = "Weight", y = "Density") +
scale_fill_manual(values = c("pink", "lightblue"), name = "Gender", labels = c("Female", "Male")) +
theme_minimal()
plot9 <- ggplotly(g9)
plot9
ggplot(dataset, aes(x = weight, y = obesity_lev, fill = obesity_lev)) +
geom_density_ridges(scale = 0.9, alpha = 0.6) +
labs(title = "Ridgeline Plot of Weight by Obesity Level", x = "Weight", y = "Obesity Level") +
theme_minimal() +
theme(legend.position = "none")
# can't seem to make the interractive plot work
g11 <- ggplot(dataset, aes(x = height, y = weight, color = obesity_lev)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE, aes(group = obesity_lev)) +  # Adds a trend line for each obesity level
ggtitle("Scatter Plot of Weight vs Height by Obesity Level") +
theme_minimal() +
labs(x = "Height", y = "Weight", color = "Obesity Level")
plot11 <- ggplotly(g11)
plot11
g12 <- ggplot(dataset, aes(x = height, y = weight)) +
geom_point(alpha = 0.7, aes(color = obesity_lev)) +
facet_wrap(~ obesity_lev) +
ggtitle("Facet Grid of Weight and Height by Obesity Level") +
theme_minimal() +
labs(x = "Height", y = "Weight", color = "Obesity Level") +
theme(legend.position = "none")
plot12 <- ggplotly(g12)
plot12
correlation_height_weight <- cor(dataset$height, dataset$weight, use = "complete.obs")
correlation_height_weight
# Dodged Bar Chart for food_btw_meals by obesity levels
g13 <- ggplot(dataset, aes(x = food_btw_meals, fill = obesity_lev)) +
geom_bar(position = "dodge", color = "black") +
ggtitle("Dodged Bar Chart for Food Between Meals by Obesity Levels") +
labs(x = "Food Between Meals", y = "Count", fill = "Obesity Levels") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14))
plot13 <- ggplotly(g13)
plot13
# Stacked Bar Chart of Food Between Meals by Obesity Level (Proportions within each Obesity Level)
g14 <- ggplot(dataset, aes(x = obesity_lev, fill = food_btw_meals)) +
geom_bar(position = "fill") + # Stacked bar chart with proportions
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) + # Format y-axis as percentages
ggtitle("Proportion of Food Between Meals Across Obesity Levels") + # Shortened and clear title
labs(x = "Obesity Levels", y = "Proportion (%)", fill = "Food Between Meals") + # Correct axis and legend labels
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1), # Rotate x-axis text for readability
plot.title = element_text(hjust = 0.5, size = 14) # Center and style the title
)
plot14 <- ggplotly(g14)
plot14
# Dodged Bar Chart for High-Caloric Food Consumption by Obesity Levels
g15 <- ggplot(dataset, aes(x = caloric_food, fill = obesity_lev)) +
geom_bar(position = "dodge", color = "black") +
ggtitle("    Dodged Bar Chart for High-Caloric Food Consumption by Obesity Levels") +
labs(x = "High-Caloric Food Consumption", y = "Count", fill = "Obesity Levels") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14)) # Center and style the title
plot15 <- ggplotly(g15)
plot15
# Grouped Bar Chart of High-Caloric Food by Obesity Level (Proportions within each Obesity Level)
g16 <- ggplot(dataset, aes(x = obesity_lev, fill = caloric_food)) +
geom_bar(
position = "dodge",
aes(y = after_stat(count) / tapply(after_stat(count), after_stat(x), sum)[after_stat(x)]),
color = "black") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
ggtitle("                                 Grouped Bar Chart of High-Caloric Food Consumption Across Obesity Levels") +
labs(x = "Obesity Levels", y = "Proportion (%)", fill = "High-Caloric Food Consumption") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 14)
)
plot16 <- ggplotly(g16)
plot16
percentage_high_caloric_consumers <- mean(dataset$caloric_food == "yes") * 100
percentage_high_caloric_consumers
# Filter out "Always" responses from the dataset
filtered_dataset <- dataset %>%
filter(freq_alcohol != "Always")
# Dodged Bar Chart for freq_alcohol by Obesity Levels (excluding "Always")
g17 <- ggplot(filtered_dataset, aes(x = freq_alcohol, fill = obesity_lev)) +
geom_bar(position = "dodge", color = "black") +
ggtitle("Dodged Bar Chart for Alcohol Consumption by Obesity Levels") +
labs(x = "Alcohol Consumption Frequency", y = "Count", fill = "Obesity Levels") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14)) # Center and style the title
plot17 <- ggplotly(g17)
plot17
# Prepare the data summary for 'Sometimes' and 'No' responses
data_summary <- dataset %>%
filter(freq_alcohol %in% c("Sometimes", "No")) %>%
group_by(obesity_lev, freq_alcohol) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(obesity_lev) %>%
mutate(
total = sum(count),
proportion = count / total
) %>%
ungroup()
# Visualization with updated title
g18 <- ggplot(data_summary, aes(x = obesity_lev, y = proportion, group = freq_alcohol, color = freq_alcohol)) +
geom_line(linewidth = 1.2) +
geom_point(size = 3) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +  # Format y-axis as percentages
ggtitle("Proportion of 'Sometimes' and 'No' Alcohol Responses by Obesity Level") +
labs(x = "Obesity Level", y = "Proportion (%)", color = "Alcohol Frequency") +
scale_color_manual(values = c("No" = "purple", "Sometimes" = "gold")) + # Improved color scheme
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 14),  # Center and style title
legend.position = "top"
)
plot18 <- ggplotly(g18)
plot18
# Dodged Bar Chart for calorie_check by Obesity Levels
g19 <- ggplot(dataset, aes(x = calorie_check, fill = obesity_lev)) +
geom_bar(position = "dodge", color = "black") +
ggtitle("    Dodged Bar Chart for the check of the calories by Obesity Levels") +
labs(x = "High-Caloric Food Consumption", y = "Count", fill = "Obesity Levels") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14)) # Center and style the title
plot19 <- ggplotly(g19)
plot19
data_summary <- dataset %>%
group_by(obesity_lev, calorie_check) %>%
summarise(count = n(), .groups = "drop") %>%
mutate(total = sum(count), proportion = count / total)
g20 <- ggplot(data_summary, aes(x = obesity_lev, y = proportion, group = calorie_check, color = calorie_check)) +
geom_line(linewidth = 1.2) +
geom_point(size = 3) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("no" = "lightcoral", "yes" = "lightblue")) +
labs(title = "Proportion of Calorie Checking by Obesity Level", x = "Obesity Level", y = "Proportion", color = "Calorie Check") +
theme_minimal() +
theme(legend.position = "none", axis.text.x = element_text(angle = 45, hjust = 1))
plot20 <- ggplotly(g20)
plot20
g21 <- ggplot(dataset, aes(x = vegetable_food)) +
geom_histogram(aes(y =after_stat(density)), bins = 30, fill = "lightgreen", color = "black", alpha = 0.6) +
geom_density(color = "darkgreen", linewidth = 1) +
ggtitle("Histogram and Density of Vegetable Food Consumption") +
theme_minimal() +
labs(x = "Vegetable Food Consumption", y = "Density")
plot21 <- ggplotly(g21)
plot21
# it creates a loop for the green line and i don't understand why, maybe it is a problem
g22 <- ggplot(dataset, aes(x = weight, y = vegetable_food, color = obesity_lev)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "loess", se = FALSE, color = "black") +
labs(title = "Scatterplot of Weight vs Vegetable Food Consumption",
x = "Weight",
y = "Vegetable Food Consumption") +
theme_minimal() +
coord_cartesian(xlim= c(40, 135), ylim= c(2, 3))
plot22 <- ggplotly(g22)
plot22
g23 <- ggplot(dataset, aes(x = physical_act)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "skyblue", color = "black", alpha = 0.6) +
geom_density(color = "darkblue", linewidth = 1) +
ggtitle("Histogram and Density of Physical Activity") +
theme_minimal() +
labs(x = "Physical Activity", y = "Density")
plot23 <- ggplotly(g23)
plot23
# same thing it creat a loop for the blue line and if that's a problem i don't know how to solve it we should ash the assistant
g24 <- ggplot(dataset, aes(x = obesity_lev, y = physical_act, fill = obesity_lev)) +
geom_violin(trim = FALSE, alpha = 0.6) +
geom_boxplot(width = 0.1, color = "black", fill = "white") +
ggtitle("Violin Plot of Physical Activity by Obesity Level") +
labs(x = "Obesity Level", y = "Physical Activity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
plot24 <- ggplotly(g24)
plot24
g25 <- ggplot(dataset, aes(x = ch2o)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "skyblue", color = "black", alpha = 0.6) +
geom_density(color = "darkblue", size = 1) +
ggtitle("Histogram and Density of Comsumption of Water") +
theme_minimal() +
labs(x = "CH2O", y = "Density")
plot25 <- ggplotly(g25)
plot25
# Scatterplot with a LOESS trend line
g26 <- ggplot(dataset, aes(x = weight, y = ch2o, color = obesity_lev)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "loess", se = FALSE, color = "black") +
labs(title = "Scatterplot of Weight vs Water Consumption", x = "Weight", y = "Water Consumption (ch2o)") +
theme_minimal() +
coord_cartesian(xlim= c(35, 135))
plot26 <- ggplotly(g26)
plot26
g27 <- ggplot(dataset, aes(x = use_tech)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue", color = "black", alpha = 0.6) +
geom_density(color = "blue", size = 1) +
labs(title = "Histogram and Density of Use of Technology", x = "Use of Technology", y = "Density") +
theme_minimal()
plot27 <- ggplotly(g27)
plot27
g28 <- ggplot(dataset, aes(x = use_tech, fill = obesity_lev)) +
geom_density(alpha = 0.5) +
labs(title = "Density of Use of Technology by Obesity Level", x = "Use of Technology", y = "Density") +
theme_minimal()
plot28 <- ggplotly(g28)
plot28
percentage_high_caloric_consumers <- mean(dataset$caloric_food == "yes") * 100
percentage_high_caloric_consumers
# Grouped Bar Chart of High-Caloric Food by Obesity Level (Proportions within each Obesity Level)
g16 <- ggplot(dataset, aes(x = obesity_lev, fill = caloric_food)) +
geom_bar(
position = "dodge",
aes(y = after_stat(count) / tapply(after_stat(count), after_stat(x), sum)[after_stat(x)]),
color = "black") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
ggtitle("                                 Grouped Bar Chart of High-Caloric Food Consumption Across Obesity Levels") +
labs(x = "Obesity Levels", y = "Proportion (%)", fill = "High-Caloric Food Consumption") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 14)
)
plot16 <- ggplotly(g16)
plot16
percentage_high_caloric_consumers <- mean(dataset$caloric_food == "yes") * 100
percentage_high_caloric_consumers
percentage_high_caloric_consumers <- mean(dataset$caloric_food == "yes") * 100
percentage_high_caloric_consumers
# Dodged Bar Chart for High-Caloric Food Consumption by Obesity Levels
g15 <- ggplot(dataset, aes(x = caloric_food, fill = obesity_lev)) +
geom_bar(position = "dodge", color = "black") +
ggtitle("    Dodged Bar Chart for High-Caloric Food Consumption by Obesity Levels") +
labs(x = "High-Caloric Food Consumption", y = "Count", fill = "Obesity Levels") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14)) # Center and style the title
plot15 <- ggplotly(g15)
plot15
# Grouped Bar Chart of High-Caloric Food by Obesity Level (Counts)
g16 <- ggplot(dataset, aes(x = obesity_lev, fill = caloric_food)) +
geom_bar(
position = "dodge",
color = "black"
) +
ggtitle("Grouped Bar Chart of High-Caloric Food Consumption Across Obesity Levels") +
labs(x = "Obesity Levels", y = "Count", fill = "High-Caloric Food Consumption") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 14)
)
plot16 <- ggplotly(g16)
plot16
# Grouped Bar Chart of High-Caloric Food by Obesity Level (Counts)
g16 <- ggplot(dataset, aes(x = obesity_lev, fill = caloric_food)) +
geom_bar(
position = "dodge",
color = "black"
) +
ggtitle("                      Grouped Bar Chart of High-Caloric Food Consumption Across Obesity Levels") +
labs(x = "Obesity Levels", y = "Count", fill = "High-Caloric Food Consumption") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 14)
)
plot16 <- ggplotly(g16)
plot16
# Grouped Bar Chart of High-Caloric Food by Obesity Level (Counts)
# Grouped Bar Chart of High-Caloric Food by Obesity Level (Counts)
g16 <- ggplot(dataset, aes(x = obesity_lev, fill = caloric_food)) +
geom_bar(
position = "dodge",
color = "black"
) +
ggtitle("Grouped Bar Chart of High-Caloric Food Consumption Across Obesity Levels") +
labs(x = "Obesity Levels", y = "Count", fill = "High-Caloric Food Consumption") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 14, margin = margin(t = 10, b = 10))
)
plot16 <- ggplotly(g16)
plot16
# Grouped Bar Chart of Calorie Check by Obesity Level (Counts)
g16 <- ggplot(dataset, aes(x = obesity_lev, fill = caloric_food)) +
geom_bar(
position = "dodge",
color = "black"
) +
ggtitle("Grouped Bar Chart of Daily Calorie Monitoring Across Obesity Levels") +
labs(x = "Obesity Levels", y = "Count", fill = "Calorie Check") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 14)
)
plot16 <- ggplotly(g16)
plot16
# Dodged Bar Chart for calorie_check by Obesity Levels
g19 <- ggplot(dataset, aes(x = calorie_check, fill = obesity_lev)) +
geom_bar(position = "dodge", color = "black") +
ggtitle("    Dodged Bar Chart for the check of the calories by Obesity Levels") +
labs(x = "High-Caloric Food Consumption", y = "Count", fill = "Obesity Levels") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14)) # Center and style the title
plot19 <- ggplotly(g19)
plot19
data_summary <- dataset %>%
group_by(obesity_lev, calorie_check) %>%
summarise(count = n(), .groups = "drop") %>%
mutate(total = sum(count), proportion = count / total)
g20 <- ggplot(data_summary, aes(x = obesity_lev, y = proportion, group = calorie_check, color = calorie_check)) +
geom_line(linewidth = 1.2) +
geom_point(size = 3) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("no" = "lightcoral", "yes" = "lightblue")) +
labs(title = "Proportion of Calorie Checking by Obesity Level", x = "Obesity Level", y = "Proportion", color = "Calorie Check") +
theme_minimal() +
theme(legend.position = "none", axis.text.x = element_text(angle = 45, hjust = 1))
plot20 <- ggplotly(g20)
plot20
# Grouped Bar Chart of Calorie Check by Obesity Level (Counts)
g19 <- ggplot(dataset, aes(x = obesity_lev, fill = caloric_food)) +
geom_bar(
position = "dodge",
color = "black"
) +
ggtitle("Grouped Bar Chart of Daily Calorie Monitoring Across Obesity Levels") +
labs(x = "Obesity Levels", y = "Count", fill = "Calorie Check") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, size = 14)
)
plot19 <- ggplotly(g19)
plot19
# Proportion of Calorie Checking by Obesity Level
g20 <- ggplot(data_summary, aes(x = obesity_lev, y = proportion, group = calorie_check, color = calorie_check)) +
geom_line(linewidth = 1.2) +
geom_point(size = 3) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("no" = "lightcoral", "yes" = "lightblue")) +
labs(title = "Proportion of Calorie Checking by Obesity Level", x = "Obesity Level", y = "Proportion", color = "Calorie Check") +
theme_minimal() +
theme(legend.position = "none", axis.text.x = element_text(angle = 45, hjust = 1))
plot20 <- ggplotly(g20)
plot20
# Dodged Bar Chart for calorie_check by Obesity Levels
g19 <- ggplot(dataset, aes(x = calorie_check, fill = obesity_lev)) +
geom_bar(position = "dodge", color = "black") +
ggtitle("    Dodged Bar Chart for the check of the calories by Obesity Levels") +
labs(x = "High-Caloric Food Consumption", y = "Count", fill = "Obesity Levels") +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, size = 14)) # Center and style the title
plot19 <- ggplotly(g19)
plot19
data_summary <- dataset %>%
group_by(obesity_lev, calorie_check) %>%
summarise(count = n(), .groups = "drop") %>%
mutate(total = sum(count), proportion = count / total)
g20 <- ggplot(data_summary, aes(x = obesity_lev, y = proportion, group = calorie_check, color = calorie_check)) +
geom_line(linewidth = 1.2) +
geom_point(size = 3) +
scale_y_continuous(labels = scales::percent) +
scale_color_manual(values = c("no" = "lightcoral", "yes" = "lightblue")) +
labs(title = "Proportion of Calorie Checking by Obesity Level", x = "Obesity Level", y = "Proportion", color = "Calorie Check") +
theme_minimal() +
theme(legend.position = "none", axis.text.x = element_text(angle = 45, hjust = 1))
plot20 <- ggplotly(g20)
plot20
g21 <- ggplot(dataset, aes(x = vegetable_food)) +
geom_histogram(aes(y =after_stat(density)), bins = 30, fill = "lightgreen", color = "black", alpha = 0.6) +
geom_density(color = "darkgreen", linewidth = 1) +
ggtitle("Histogram and Density of Vegetable Food Consumption") +
theme_minimal() +
labs(x = "Vegetable Food Consumption", y = "Density")
plot21 <- ggplotly(g21)
plot21
# it creates a loop for the green line and i don't understand why, maybe it is a problem
g21 <- ggplot(dataset, aes(x = jitter(vegetable_food, amount = 0.1))) +
geom_histogram(aes(y = after_stat(density)), bins = 30, fill = "lightgreen", color = "black", alpha = 0.6) +
geom_density(color = "darkgreen", linewidth = 1) +
ggtitle("Histogram and Density of Vegetable Food Consumption") +
theme_minimal() +
labs(x = "Vegetable Food Consumption", y = "Density")
plot21 <- ggplotly(g21)
plot21
# it creates a loop for the green line and i don't understand why, maybe it is a problem
g21 <- ggplot(dataset, aes(x = vegetable_food)) +
geom_histogram(aes(y =after_stat(density)), bins = 30, fill = "lightgreen", color = "black", alpha = 0.6) +
geom_density(color = "darkgreen", linewidth = 1, bw = 0.1) +
+
ggtitle("Histogram and Density of Vegetable Food Consumption") +
theme_minimal() +
labs(x = "Vegetable Food Consumption", y = "Density")
g21 <- ggplot(dataset, aes(x = vegetable_food)) +
geom_histogram(aes(y =after_stat(density)), bins = 30, fill = "lightgreen", color = "black", alpha = 0.6) +
geom_density(color = "darkgreen", linewidth = 1, bw = 0.1) +
ggtitle("Histogram and Density of Vegetable Food Consumption") +
theme_minimal() +
labs(x = "Vegetable Food Consumption", y = "Density")
plot21 <- ggplotly(g21)
plot21
# it creates a loop for the green line and i don't understand why, maybe it is a problem
g23 <- ggplot(dataset, aes(x = physical_act)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "skyblue", color = "black", alpha = 0.6) +
geom_density(color = "darkblue", linewidth = 1) +
ggtitle("Histogram and Density of Physical Activity") +
theme_minimal() +
labs(x = "Physical Activity", y = "Density")
plot23 <- ggplotly(g23)
plot23
# same thing it creat a loop for the blue line and if that's a problem i don't know how to solve it we should ash the assistant
g25 <- ggplot(dataset, aes(x = ch2o)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "skyblue", color = "black", alpha = 0.6) +
geom_density(color = "darkblue", size = 1) +
ggtitle("Histogram and Density of Comsumption of Water") +
theme_minimal() +
labs(x = "CH2O", y = "Density")
plot25 <- ggplotly(g25)
plot25
# Scatterplot with a LOESS trend line
g26 <- ggplot(dataset, aes(x = weight, y = ch2o, color = obesity_lev)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "loess", se = FALSE, color = "black") +
labs(title = "Scatterplot of Weight vs Water Consumption", x = "Weight", y = "Water Consumption (ch2o)") +
theme_minimal() +
coord_cartesian(xlim= c(35, 135))
plot26 <- ggplotly(g26)
plot26
g27 <- ggplot(dataset, aes(x = use_tech)) +
geom_histogram(aes(y = ..density..), bins = 30, fill = "lightblue", color = "black", alpha = 0.6) +
geom_density(color = "blue", size = 1) +
labs(title = "Histogram and Density of Use of Technology", x = "Use of Technology", y = "Density") +
theme_minimal()
plot27 <- ggplotly(g27)
plot27
g28 <- ggplot(dataset, aes(x = use_tech, fill = obesity_lev)) +
geom_density(alpha = 0.5) +
labs(title = "Density of Use of Technology by Obesity Level", x = "Use of Technology", y = "Density") +
theme_minimal()
plot28 <- ggplotly(g28)
plot28
